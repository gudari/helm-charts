{{- if .Values.yarn.resourceManager.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-yarn-resourcemanager
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
{{- with .Values.yarn.resourceManager.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
    app: {{ include "hadoop.name" . }}
    chart: {{ include "hadoop.chart" . }}
    release: {{ .Release.Name }}
    component: yarn-resourcemanager
spec:
  serviceName: {{ include "hadoop.fullname" . }}-yarn-resourcemanager
  replicas: {{ .Values.yarn.resourceManager.replicas }}
  selector:
    matchLabels:
      app: {{ include "hadoop.name" . }}
      release: {{ .Release.Name }}
      component: yarn-resourcemanager
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
{{- with .Values.yarn.resourceManager.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
        app: {{ include "hadoop.name" . }}
        release: {{ .Release.Name }}
        component: yarn-resourcemanager
    spec:
    {{- with .Values.yarn.resourceManager.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
    {{- end }}
      affinity:
      {{- if .Values.yarn.resourceManager.affinity }}
{{ toYaml .Values.yarn.resourceManager.affinity | indent 8 }}
    {{- end }}
        podAntiAffinity:
        {{- if eq .Values.yarn.resourceManager.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ include "hadoop.name" . }}
                release: {{ .Release.Name | quote }}
                component: yarn-resourcemanager
        {{- else if eq .Values.yarn.resourceManager.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ include "hadoop.name" . }}
                  release: {{ .Release.Name | quote }}
                  component: yarn-resourcemanager
        {{- end }}
      terminationGracePeriodSeconds: 0
      containers:
      - name: yarn-resourcemanager
        image: "{{ .Values.yarn.resourceManager.image.repository }}:{{ .Values.yarn.resourceManager.image.tag }}"
        imagePullPolicy: {{ .Values.yarn.resourceManager.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.yarn.resourceManager.resources | indent 10 }}
        ports:
{{- range $key, $port := .Values.yarn.resourceManager.ports }}
        - name: {{ $key }}
{{ toYaml $port | indent 10 }}
{{- end }}
        readinessProbe:
          httpGet:
            path: /ws/v1/cluster/info
            port: {{ .Values.yarn.resourceManager.ports.http.containerPort }}
          initialDelaySeconds: 120
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ws/v1/cluster/info
            port: {{ .Values.yarn.resourceManager.ports.http.containerPort }}
          initialDelaySeconds: 120
          timeoutSeconds: 2
        env:
        - name: SERVICE_PRECONDITION
          value: "{{ include "hadoop.fullname" . }}-hdfs-namenode-0.{{ include "hadoop.fullname" . }}-hdfs-namenode.{{ .Release.Namespace }}.svc.cluster.local:50070"
        envFrom:
        - configMapRef:
            name: {{ include "hadoop.fullname" . }}-configmap
{{- end }}
